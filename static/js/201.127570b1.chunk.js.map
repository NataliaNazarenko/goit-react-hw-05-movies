{"version":3,"file":"static/js/201.127570b1.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENF,EAAAA,EAAAA,IAAA,sCAAyCC,IAFnC,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,QAAQC,MAAM,KAAMC,UALS,yDAAH,qDASjBC,EAAsB,mCAAG,WAAMC,GAAN,gGAEXV,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DS,IAHnD,cAE5BP,EAF4B,yBAK3BA,EAASC,KAAKC,SALa,gCAOlCC,QAAQC,MAAM,KAAMC,UAPc,yDAAH,sDAWtBG,EAAe,mCAAG,WAAMC,GAAN,gGAEJZ,EAAAA,EAAAA,IAAA,gBAAmBY,EAAnB,oBAAsCX,EAAtC,oBAFI,cAErBE,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,QAAQC,MAAM,KAAMC,UALO,yDAAH,sDASfK,EAAe,mCAAG,WAAMD,GAAN,gGAEJZ,EAAAA,EAAAA,IAAA,gBAAmBY,EAAnB,4BAA8CX,EAA9C,oBAFI,cAErBE,EAFqB,yBAGpBA,EAASC,KAAKU,MAHM,gCAK3BR,QAAQC,MAAM,KAAMC,UALO,yDAAH,sDASfO,EAAe,mCAAG,WAAMH,GAAN,gGAEJZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACeX,EADf,2BAFI,cAErBE,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAM,KAAMC,UAPO,yDAAH,qD,wFCzCfQ,E,QAAUC,EAAAA,IAAH,6M,SCEb,SAASC,IACd,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,wGChBYC,EAAaV,EAAAA,EAAAA,GAAH,kDAIVW,EAAaX,EAAAA,EAAAA,GAAH,uFAER,SAAAY,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,OAA1B,IACD,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,IAAxB,IAGXC,GAAOjB,EAAAA,EAAAA,GAAOkB,EAAAA,GAAPlB,CAAH,yIAEN,SAAAY,GAAK,OAAIA,EAAMC,MAAMM,OAAOC,IAAvB,IAGH,SAAAR,GAAK,OAAIA,EAAMC,MAAMM,OAAOE,MAAvB,IACa,SAAAT,GAAK,OAAIA,EAAMC,MAAMM,OAAOE,MAAvB,I,SCfvBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACf,EAAD,UACGa,EAAOG,KAAI,SAAAC,GAAK,OACf,SAAChB,EAAD,WACE,SAACM,EAAD,CAAMW,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFML,EAAME,GADR,OAUxB,C,4KClBYI,E,QAAQjC,EAAAA,IAAH,4HAGH,SAAAY,GAAK,OAAIA,EAAMC,MAAMC,UAAUoB,KAA1B,IACT,SAAAtB,GAAK,OAAIA,EAAMC,MAAMM,OAAOC,IAAvB,I,SCHT,SAASe,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SACxB,OACE,SAACH,EAAD,CAAOI,KAAK,QAAZ,UACE,wBAAKD,KAGV,CCFc,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAqBH,EAAAA,EAAAA,UAAS,MAArBI,GAAT,eAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIF,GAAa,GAFjB,UAG0BzD,EAAAA,EAAAA,MAH1B,OAGUG,EAHV,OAIIoD,EAAUpD,GACVuD,EAAS,MALb,gDAOIE,EAAAA,OAAAA,QAAe,iDAPnB,yBASIH,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAcdI,EACD,GAAE,KAGD,iCACE,SAACX,EAAD,UAAU,oBACV,SAACb,EAAA,EAAD,CAAYC,OAAQA,IAEnBkB,IAAa,SAACM,EAAA,EAAD,MAGnB,C","sources":["api/index.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Message/Message.styled.jsx","components/Message/Message.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a542711b10b0d1e187ab79449890246f';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getSearchMoviesByQuery = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n`;\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport function LoaderComponent() {\n  return (\n    <Wrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#00BFFF\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Wrapper>\n  );\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListMovies = styled.ul`\n  list-style-type: none;\n`;\n\nexport const MoviesItem = styled.li`\n  font-weight: 600;\n  font-size: ${props => props.theme.fontSizes.mediumX};\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: ${props => props.theme.colors.dark};\n\n  &:hover {\n    color: ${props => props.theme.colors.accent};\n    border-bottom: 1px solid ${props => props.theme.colors.accent};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { ListMovies, MoviesItem, Link } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ListMovies>\n        {movies.map(movie => (\n          <MoviesItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </MoviesItem>\n        ))}\n      </ListMovies>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Alert = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: ${props => props.theme.fontSizes.small};\n  color: ${props => props.theme.colors.dark};\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { Alert } from './Message.styled';\n\nexport function Message({ children }) {\n  return (\n    <Alert role=\"alert\">\n      <h1>{children}</h1>\n    </Alert>\n  );\n}\n\nMessage.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { MoviesList } from 'components/MoviesList';\nimport { getTrendingMovies } from 'api/index.js';\nimport { LoaderComponent } from 'components/Loader';\nimport { Message } from 'components/Message';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const results = await getTrendingMovies();\n        setMovies(results);\n        setError(null);\n      } catch (error) {\n        Notify.failure('Oops, something went wrong. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <Message>{'Trending today'}</Message>\n      <MoviesList movies={movies} />\n\n      {isLoading && <LoaderComponent />}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","console","error","toJSON","getSearchMoviesByQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Wrapper","styled","LoaderComponent","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ListMovies","MoviesItem","props","theme","fontSizes","mediumX","spacing","Link","NavLink","colors","dark","accent","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Alert","small","Message","children","role","Home","useState","setMovies","isLoading","setIsLoading","setError","useEffect","Notify","fetchMovies","Loader"],"sourceRoot":""}