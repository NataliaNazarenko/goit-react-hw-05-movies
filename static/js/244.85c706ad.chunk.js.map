{"version":3,"file":"static/js/244.85c706ad.chunk.js","mappings":"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","sources":["api/index.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a542711b10b0d1e187ab79449890246f';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getSearchMoviesByQuery = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error.toJSON());\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n`;\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport function LoaderComponent() {\n  return (\n    <Wrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#00BFFF\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Wrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  margin-top: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const ListReviews = styled.ul`\n  list-style-type: none;\n`;\nexport const DetailsItem = styled.li`\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const AuthorName = styled.h2`\n  font-weight: 600;\n  font-size: ${props => props.theme.fontSizes.mediumX};\n  margin-bottom: ${props => props.theme.spacing(2.5)};\n`;\n\nexport const InfoContent = styled.p`\n  font-size: ${props => props.theme.fontSizes.medium};\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieReviews } from 'api/index.js';\nimport { LoaderComponent } from 'components/Loader';\nimport { Wrapper, ListReviews, DetailsItem, AuthorName, InfoContent } from './Reviews.styled';\n\nexport function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMoviesReviews() {\n      try {\n        setIsLoading(true);\n        const reviews = await getMovieReviews(movieId);\n\n        setReviews(reviews);\n        setError(null);\n      } catch (error) {\n        Notify.failure('Oops, something went wrong. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMoviesReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <LoaderComponent />}\n      {reviews.length !== 0 && (\n        <Wrapper>\n          <ListReviews>\n            {reviews.map(review => (\n              <DetailsItem key={review.id}>\n                <AuthorName>Author: {review.author}</AuthorName>\n                <InfoContent>{review.content}</InfoContent>\n              </DetailsItem>\n            ))}\n          </ListReviews>\n        </Wrapper>\n      )}\n      {reviews.length === 0 && <div>We don't have any reviews for this movie.</div>}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","results","console","error","toJSON","getSearchMoviesByQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Wrapper","styled","LoaderComponent","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","props","theme","spacing","ListReviews","DetailsItem","AuthorName","fontSizes","mediumX","InfoContent","medium","Reviews","useParams","useState","reviews","setReviews","isLoading","setIsLoading","setError","useEffect","Notify","fetchMoviesReviews","Loader","length","map","review","author","content","id"],"sourceRoot":""}